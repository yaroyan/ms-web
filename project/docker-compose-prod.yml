version: '3'
services:

  # API-Gateway
  gateway:
    container_name: gateway-service-1
    build:
      context: ./../gateway
      dockerfile: ./../gateway/Dockerfile.prod
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  # Auth
  auth:
    container_name: auth-service-1
    build:
      context: ./../auth
      dockerfile: ./../auth/Dockerfile.prod
    restart: always
    expose:
      - 80
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  # Auth-Postgres-DB
  postgres:
    image: 'postgres:15-alpine'
    container_name: auth-service-1-postgres-service-1
    expose:
      - 5432
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  # Logger
  logger:
    container_name: logger-service-1
    build:
      context: ./../logger
      dockerfile: ./../logger/Dockerfile.prod
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  # Logger-Mongo-DB
  mongo:
    container_name: logger-dev-service-1-mongo-dev-service-1
    image: 'mongo:5.0.14'
    expose:
      - 27017
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_UERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mailer:
    container_name: mailer-dev-service-1
    build:
      context: ./../mailer
      dockerfile: ./../mailer/Dockerfile.prod
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - MAIL_DOMAIN: localhost
      - MAIL_HOST: mailhog
      - MAIL_PORT: 1025
      - MAIL_ENCRYPTION: none
      - MAIL_USERNAME: ""
      - MAIL_PASSWORD: ""
      - FROM_NAME: "John Smith"
      - FROM_ADDRESS: john.smith@example.com

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"

  # Listener
  listener:
    container_name: listener-dev-service-1
    build:
      context: ./../listener
      dockerfile: ./../listener/Dockerfile.dev
    deploy:
      mode: replicated
      replicas: 1
    expose:
      - 80
    volumes:
      - ./../listener:/go/src/github.com/yaroyan/gms/listener

  # RabbitMQ
  rabbitmq:
    image: 'rabbitmq:3.11-alpine'
    container_name: rabbitmq-dev-service-1
    expose: 5672
    deploy:
      mode: replicated
      replicas: 1
    volume:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/
